This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-10-19T14:25:43.311Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
public/
  robots.txt
  site.webmanifest
src/
  components/
    ui/
      avatar.tsx
      badge.tsx
      button.tsx
      card.tsx
    Analytics.astro
    Header.astro
    Nav.astro
    PostCard.astro
  content/
    posts/
      die-before-dying.md
      educated-citizens.md
      emergent-trends-in-software.md
      moonlighters-tale-1.md
      my-philosophies.md
      react-slick-horizontal-slider.md
      rsi-developer-cautionary-tale-and-how-talon-saved-my-life.md
      second-one.md
    config.ts
  layouts/
    Layout.astro
    MarkdownPostLayout.astro
  lib/
    key-projects.json
    professional-skills.json
    utils.ts
  pages/
    posts/
      [...slug].astro
      index.astro
    index.astro
  styles/
    globals.css
  env.d.ts
.gitignore
.nvmrc
.prettierrc
astro.config.mjs
components.json
package.json
README.md
tailwind.config.mjs
tsconfig.json

================================================================
Repository Files
================================================================

================
File: public/robots.txt
================
User-agent: *
Disallow:
Sitemap: https://andrewriefenstahl.com/sitemap-index.xml

================
File: public/site.webmanifest
================
{
  "name": "Andrew Riefenstahl: Full Stack Web Developer",
  "short_name": "Andrew Riefenstahl",
  "icons": [
    {
      "src": "/android-chrome-192x192.png",
      "sizes": "192x192",
      "type": "image/png"
    },
    {
      "src": "/android-chrome-512x512.png",
      "sizes": "512x512",
      "type": "image/png"
    }
  ],
  "theme_color": "#e7e5e4",
  "background_color": "#ffffff",
  "display": "standalone",
  "start_url": "https://andrewriefenstahl.com",
  "description": "Discover Andrew Riefenstahl's journey in full stack web development, showcasing skills in modern technologies and innovative solutions."
}

================
File: src/components/ui/avatar.tsx
================
import * as React from "react"
import * as AvatarPrimitive from "@radix-ui/react-avatar"

import { cn } from "@/lib/utils"

const Avatar = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",
      className
    )}
    {...props}
  />
))
Avatar.displayName = AvatarPrimitive.Root.displayName

const AvatarImage = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Image>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Image
    ref={ref}
    className={cn("aspect-square h-full w-full", className)}
    {...props}
  />
))
AvatarImage.displayName = AvatarPrimitive.Image.displayName

const AvatarFallback = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Fallback>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Fallback
    ref={ref}
    className={cn(
      "flex h-full w-full items-center justify-center rounded-full bg-muted",
      className
    )}
    {...props}
  />
))
AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName

export { Avatar, AvatarImage, AvatarFallback }

================
File: src/components/ui/badge.tsx
================
import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const badgeVariants = cva(
  "inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80",
        outline: "text-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

export interface BadgeProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof badgeVariants> {}

function Badge({ className, variant, ...props }: BadgeProps) {
  return (
    <div className={cn(badgeVariants({ variant }), className)} {...props} />
  )
}

export { Badge, badgeVariants }

================
File: src/components/ui/button.tsx
================
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
        outline:
          "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 rounded-md px-8",
        icon: "h-9 w-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }

================
File: src/components/ui/card.tsx
================
import * as React from "react"

import { cn } from "@/lib/utils"

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-xl border bg-card text-card-foreground shadow",
      className
    )}
    {...props}
  />
))
Card.displayName = "Card"

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
))
CardHeader.displayName = "CardHeader"

const CardTitle = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLHeadingElement>
>(({ className, ...props }, ref) => (
  <h3
    ref={ref}
    className={cn("font-semibold leading-none tracking-tight", className)}
    {...props}
  />
))
CardTitle.displayName = "CardTitle"

const CardDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
  <p
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
CardDescription.displayName = "CardDescription"

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
))
CardContent.displayName = "CardContent"

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center p-6 pt-0", className)}
    {...props}
  />
))
CardFooter.displayName = "CardFooter"

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }

================
File: src/components/Analytics.astro
================
---
// Analytics.astro
// Define any props or imports you need
---

<script>
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }
  gtag("js", new Date());
  gtag("config", "G-X0GP8G25YE");
</script>
<script async src="https://www.googletagmanager.com/gtag/js?id=G-X0GP8G25YE"
></script>

================
File: src/components/Header.astro
================
---
import { Image } from "astro:assets";
import Nav from "./Nav.astro";
const { title } = Astro.props;
import profileImage from "../assets/Andrew-Riefenstahl.jpg";
---

<header
  class="fixed top-0 z-50 w-full bg-stone-400 px-6 py-2 text-stone-100 shadow-md sm:relative"
>
  <div class="mx-auto flex w-full max-w-7xl items-center justify-between">
    <div class="px-4">
      <!-- <Image
        src={profileImage}
        alt="Andrew Riefenstahl smiling with his arms crossed against a multicolored background with hues of purple and maroon to pink."
        width="36"
        height="36"
        class="rounded-full"
      /> -->
    </div>
    <nav>
      <Nav />
    </nav>
  </div>
</header>

================
File: src/components/Nav.astro
================
---

---

<div class="relative">
  <button
    class="right-0 top-0 flex h-10 w-10 flex-col items-center justify-center rounded-lg bg-stone-200 shadow-sm"
    id="menu-btn"
  >
    <span class="relative bottom-1 text-2xl text-stone-700">☰</span>
  </button>
  <ul
    id="menu"
    class="absolute -top-2 right-4 mt-12 hidden w-48 flex-col items-start rounded-md border border-stone-500 bg-stone-200 p-2 text-stone-700 shadow-md"
  >
    <li class="w-full">
      <a
        href="/"
        class="block rounded-md px-4 py-2 hover:bg-stone-200 focus:bg-stone-200"
      >
        Home</a
      >
    </li>
    <li class="w-full">
      <a
        href="/posts"
        class="block rounded-md px-4 py-2 hover:bg-stone-200 focus:bg-stone-200"
      >
        Blog Posts</a
      >
    </li>
  </ul>
</div>
<script>
  document.addEventListener("astro:page-load", () => {
    function toggleMenu() {
      const menu = document.getElementById("menu");
      if (menu.classList.contains("hidden")) {
        menu.classList.remove("hidden");
        menu.classList.add("flex");
      } else {
        menu.classList.add("hidden");
        menu.classList.remove("flex");
      }
    }

    const menuBtn = document.getElementById("menu-btn");
    menuBtn.removeEventListener("click", toggleMenu);
    menuBtn.addEventListener("click", toggleMenu);
  });
</script>

================
File: src/components/PostCard.astro
================
---
import { Image } from "astro:assets";
interface Props {
  post: any;
}
const { post } = Astro.props;
const { title, description, pubDate, image, author } = post.data;
---

<li
  class="list-none overflow-hidden rounded-lg border bg-stone-100 p-4 shadow-sm"
>
  <a href={"/posts/" + post.slug} class="text-decoration-none">
    <div>
      <Image src={image.url} alt={image.alt} class="h-auto w-full rounded-sm" />
      <h2 class="mt-2 line-clamp-2 text-lg font-bold">{title}</h2>
      <p class="mt-1 text-xs text-gray-600">
        {new Date(pubDate).toLocaleDateString()}
      </p>
      <p class="mt-2 line-clamp-3 text-sm text-gray-800">{description}</p>
    </div>
  </a>
</li>

================
File: src/content/posts/die-before-dying.md
================
---
title: "Die Before Dying: The Death of My Ego"
pubDate: 2024-08-28
description: "A personal journey of spiritual awakening through the painful loss of identity, reshaping the self, and embracing a new perspective on life after a cochlear concussion."
author: "Andrew Riefenstahl"
image:
  url: "../../assets/images/die-before-dying.jpg"
  alt: "Abstract image representing the transformation of the self and the death of the ego."
tags:
  [
    "spiritual awakening",
    "ego death",
    "personal transformation",
    "healing journey",
    "self-awareness",
  ]
---

Where to begin? What a strange universe we live in. My life has changed dramatically since the last time I wrote a blog. So, let’s just dive in.

I have always loved music. I’ve always been a creator. I’ve always wanted to make music and share art with people. It’s something that I’ve identified with—it’s who I am, or at least, who I was. On June 1st, 2024, I was working with a band in my home studio. Their drummer brought in his own drum set, which just so happened to be the largest set I’d ever worked with in my home studio. Two massive floor toms, not to mention songs that ran into the seven-and-a-half-minute mark, and they were doing two of them. Even with ear protection, four hours of pounding on drums caught up with me, and somehow, it decided to rewrite my entire existence.

To make matters worse, a friend asked me to see some live music that night. Against my better judgment, I went out, exposing myself to even more loud acoustics. I drank and had a pretty decent time, though I was exhausted from the recording session.

The next day, I woke up with some sensitivity in my ears and a feeling of fullness. I assumed it was from the long session the previous day and the music that night and that it would go away. But it didn’t.

At about the one-week mark, I started to worry, realizing that this wasn’t normal ear fatigue. I had increased sensitivity to most noises—dog barks were unbearable, and even driving, the low-end rumble of the car aggravated me. I began to spiral, worried about what was happening, and the internet only confirmed my fears that this was more than just regular ear fatigue.

After visiting two ENTs, both confirmed that based on my overexposure to loud sounds and my age, I had likely suffered a cochlear concussion. With this kind of injury, there is no clear timeline, and there’s little that medicine can do. I took some steroids orally and even had one injected directly into my eardrum, but these treatments generally don’t have much effect—and they didn’t for me.

The next couple of months in the summer of 2024 would become the darkest of my life, and yet, they would somehow be the most beautiful.

No amount of writing can express the mental anguish I felt having my passion stripped away from me. The world continues to move at its regular pace, and all you can do is tear yourself apart, going through every stage of grief on repeat: denial, anger, bargaining, and eventually, acceptance—which we’ll get to soon.

Looking back, it almost feels like this was meant to happen. I know that’s just my brain’s way of trying to make sense of things that can’t be understood. Friends would pull me aside, telling me how proud they were of me, saying I was the guy they believed could run a professional studio in Austin, Texas. Musicians and artists were lining up to work with me. Worse, I was about to play my debut show as a solo artist mid-summer. My ego was fertile, rampant, wild, and fully engrossed in becoming the person I thought I wanted to be. But none of that was going to happen.

A few weeks after the origin incident I went on a road trip to clear my head, but all I brought back was more anger. I felt confused, like I had no family, no foundation. I didn’t know who I was. I reached out to every support system, knowing I was going through something terrible, but it was hard to hear them—nothing was working.

The first month was a blur. By July 8th, I drew a line in the sand, knowing I had to save myself from this suffering, and that only I could do it. A beacon of light came in the form of a book recommended by a friend: *The Power of Now* by Eckhart Tolle. It gave me the tools to begin healing and to strip away the carcass of my ego, which had weighed me down with hopes, dreams, fears, and memories. When I was finally able to step back and bring awareness to my situation, I began to heal.

I took my first steps toward spiritual enlightenment. I was becoming spiritually awakened—something I never thought would happen to me, but it made sense. When you’re going through a crisis, you might join a cult, a crappy political party, or buy some self-help books. I chose the latter, and I’m thankful I did.

This new awareness reframed my perspective on life. Living in the now and just being present allowed me to feel joy again, no longer burdened by what my ego wanted me to be. I was simply able to be.

I began to appreciate everything around me. My backyard became a sanctuary. I listened to the sounds of summer, though at times the insects were painful during my heightened sensitivity. Still, I was healing and finding a new baseline—a new normal. This baseline would continue to shift, and I knew I’d get better, though there’s no telling if I’ll ever be able to handle the pounding of drums at point blank again. On the worst days, my own voice would hurt my ears. On the best, I could go out with friends and, with some ear protection, enjoy myself without being overwhelmed by the acoustics.

I feel like I’m losing steam here, telling you all this, but I just wanted to say that I know I’m going to be okay. I know my life won’t look like I originally envisioned, but I’ve found beauty and strength in my friendships and connections. My heart goes out to everyone who has had to deal with such limitations. 

The literature helped me find acceptance. I stay home a lot now, dedicated to getting better and increasing my threshold. I still have setbacks when I do something careless or go out without ear protection, and I understand it will probably be like that for a long time—maybe forever.

I had to let go of my ego. I had to die before dying, which sounds scary at first, but you begin to understand. It’s like in *Fight Club*: "It’s only after we’ve lost everything that we’re free to do anything." Such is life. 

If you’re going through something similar, please reach out to the people who love you the most. Be patient with yourself. Don’t beat yourself up, and avoid negative self-talk. You are worthy of love, and you will live a wonderful life.

================
File: src/content/posts/educated-citizens.md
================
---
title: "Essentials for Human Civilization Success"
pubDate: 2024-01-17
description: "Exploring the key qualities essential for the success of human civilization, focusing on education, stewardship, recycling, empathy, and the concept of universal basic income."
author: "Andrew Riefenstahl"
image:
  url: "../../assets/images/educated-citizens.jpg"
  alt: "Conceptual image representing human civilization and its essential qualities."
tags:
  [
    "education",
    "stewardship",
    "sustainability",
    "empathy",
    "universal basic income",
  ]
---

I have been considering starting a blog focused on identifying the **key qualities essential for the success of human civilization**.

## Fundamental Requirement: Education

One fundamental requirement is that people must be educated and have access to education. The benefits of education are numerous and well-documented, so I won’t delve deeply into them here. However, I would like to highlight the top three reasons why education is crucial:

1. **Expansion of Opportunities**: Education significantly broadens one’s ability to recognize and create new opportunities. This leads to innovative methods and solutions for common problems, enhancing overall progress.
2. **Critical Thinking and Information Literacy**: Education equips individuals with the ability to think critically and discern misinformation. This skill is vital for making informed decisions, which, in turn, fosters the development of improved strategies and solutions for challenges faced by human civilization.
3. **Broadened Perspectives**: Education enables people to understand and evaluate the past, present, and future. It helps individuals gain a broader perspective of their role in both their local environment and the larger universe. This understanding can enhance the quality of life and mental health.

In summary, education is not just a tool for personal advancement; it's a cornerstone for the thriving and sustainability of our civilization.

## Enriching Our Approach to Stewardship

Another essential quality for fostering a healthier human civilization and society is a profound commitment to **stewardship**. Beyond a mere concept, stewardship is a way of living that respects and nurtures the environment and communities we inhabit.

### Expanding the Definition of Stewardship:

- **Active Engagement**: Stewardship goes beyond passive care; it involves actively engaging with our environment, whether it's through gardening, community clean-ups, or supporting local sustainability initiatives.
- **Community and Job Creation**: By focusing resources on stewardship, we not only enhance our immediate surroundings but also contribute to job creation at local, city, and state levels. This collective effort results in shared benefits, strengthening the bond within communities.
- **Education in Stewardship**: Integrating stewardship into education systems can instill these values from a young age. Schools and educational programs that include environmental and community stewardship help foster a sense of responsibility and connection to the world.

### Stewardship in Practice:

- **Personal and Global Impact**: From tending a garden to embracing principles like Feng Shui, stewardship can bring peace and mental well-being. On a larger scale, effective management of parks and public spaces shows stewardship's potential to create healthy and vibrant communities.
- **Forward-Thinking**: Stewardship isn't just about the present; it's about ensuring the well-being of future generations. By caring for our world today, we lay the foundation for a sustainable and prosperous future.

In conclusion, stewardship is a fundamental aspect of a thriving society. It's about nurturing the world around us and recognizing our role in preserving it for future generations. This holistic approach to stewardship will lead to a more balanced, healthy, and interconnected world.

## Championing Sustainable Practices: Recycling, Reusing, and Reusability

A key quality that would contribute significantly to a sustainable global civilization is a strong culture of **recycling, reusing, and reusability**. This concept is not just about waste management; it's a comprehensive approach to how we view and use resources.

### The Principles of Sustainable Living:

- **Designing for Longevity**: We need to shift our approach to designing and building items that are not only durable but also easily repairable at the local level. This includes moving away from proprietary techniques that restrict repairability.
- **Mindful Consumption**: In terms of clothing and other consumer goods, reducing waste is crucial. This involves thoughtful purchasing, opting for items that have a lower environmental impact, and are more sustainable in the long run.

### Integrating Sustainability into Daily Life:

- **Empowering Local Solutions**: Encouraging local solutions for repair and maintenance can stimulate local economies and reduce the carbon footprint associated with shipping goods for repair.
- **Educational Focus**: Integrating concepts of sustainability into education can ensure that future generations are more conscious about resource usage and the impact of their choices on the environment.

By embracing these principles of recycling, reusing, and reusability, we can significantly contribute to the health and longevity of our planet. This approach not only complements the access to education and the application of stewardship but also ensures that we leave a sustainable legacy for future generations.

In conclusion, the adoption of sustainable practices is a critical step towards building a responsible and enduring civilization. It requires a collective effort to rethink our relationship with resources, emphasizing conservation and mindfulness for a healthier planet.

## Embracing Empathy and Compassion

Another critical quality for being good global citizens is **empathy and compassion** for all living things. Empathy, often misunderstood, is not just a passive emotional response but a powerful catalyst for societal transformation.

### Deepening Our Understanding of Empathy

Empathy is a skill that can be cultivated and nurtured. Although challenging, especially if not taught from a young age, empathy can be learned and strengthened over time through education and practice.

- **Broadening Perspectives through Education**: The role of education is paramount in fostering empathy. By learning about different cultures, histories, and experiences, we expand our understanding and appreciation for the diversity of life on our planet.
- **Strength in Connection**: Empathy is not a sign of weakness but a strength. It allows us to connect deeply with others, fostering a sense of community and shared responsibility. Recognizing our interconnectedness and the impact of our actions on others and the world is crucial.

### The Power of Empathy in Action

Empathy can lead to a more compassionate society and be a driving force for social change.

- **Fostering a Compassionate Society**: Promoting empathy encourages us to consider the feelings and perspectives of others, leading to more inclusive and equitable communities.
- **Motivation for Social Change**: Empathy can drive us to address injustices and strive for a more harmonious world where every living being is respected and valued.

Empathy and compassion are foundational elements for building a world where every individual can thrive. By embracing these qualities, we pave the way for a more understanding, caring, and connected society.

## Exploring Universal Basic Income as a Pillar for Civilization

The concept of **universal basic income (UBI)** is another crucial element in envisioning a successful human civilization. UBI represents not just an economic policy but a shift towards a more equitable society.

### The Role of Universal Basic Income:

- **Economic Equality**: UBI proposes a model where all individuals receive a regular, unconditional sum of money. This approach can help reduce poverty and income inequality, ensuring that basic living standards are met for everyone.
- **Fostering Innovation and Creativity**: By providing financial stability, UBI can free individuals to pursue education, engage in creative endeavors, or start new businesses, without the sole focus on earning a living wage.
- **Adapting to Technological Changes**: As automation and technological advancements transform the job market, UBI could be a solution to potential job displacement, ensuring economic stability for all citizens.

### Implementing Universal Basic Income:

- **Evaluating Economic Impact**: Implementing UBI requires careful consideration of its economic implications. This includes understanding its effects on labor markets, consumer behavior, and government finances.
- **Pilot Programs and Research**: Pilot programs and research studies on UBI can provide valuable insights into its feasibility and impact, helping to tailor the approach to specific societal needs.

In summary, the integration of universal basic income into our societal structure holds the promise of a more equitable and progressive civilization. It's a concept that aligns with the fundamental ideals of providing for the common welfare and preparing for a future shaped by rapid technological and economic changes.

## The Pivotal Role of Education in Shaping Civilization

Reflecting on these ideas, it's clear that the **central theme of education** is not just an accessory but the backbone of a thriving civilization. Education, in its truest sense, is more than just academic learning; it's a tool for empowering individuals and transforming societies.

### Education as a Catalyst for Change:

- **Beyond Academic Learning**: Education is not confined to the four walls of a classroom. It encompasses the acquisition of knowledge, skills, and values that enable individuals to contribute meaningfully to their communities and the world at large.
- **Evolving with Society**: The education system must evolve to reflect the changing needs of society. This includes integrating critical thinking, emotional intelligence, and global citizenship into the curriculum, preparing individuals to tackle contemporary challenges.
- **Accessibility and Inclusivity**: Ensuring access to education for all is paramount. This involves breaking down barriers related to socio-economic status, geography, and disability, thereby fostering a more inclusive and equitable society.

### Addressing Challenges and Reimagining Education:

- **Reforming the System**: The gradual dismantling of education systems, particularly in America, raises concerns. It's vital to identify where the system started to falter and implement reforms that prioritize quality education for all.
- **Investing in the Future**: The focus of investment should shift from short-term gains, such as military spending, to long-term societal benefits like education. This is not merely a financial investment but a commitment to the future of humanity.
- **Empowering Through Knowledge**: Education empowers individuals with the tools to think critically, act compassionately, and engage in rich, meaningful conversations. It's the foundation for innovation, creativity, and positive societal change.

In summary, the revitalization of education is crucial for addressing societal issues and nurturing a more informed, empathetic, and proactive global community. Our next steps should involve a deeper investment in education, removing the influence of money in politics, and collectively working towards a society where knowledge and compassion are at the forefront. The future of civilization hinges on our ability to educate and be educated, for it's through this that we can truly transform our world.

In summary, we need to invest more in education and remove money from politics. This will be the subject of my next blog. Thank you for reading, and I hope you found this interesting. If you like it, feel free to share it on Twitter. Have a great day!

================
File: src/content/posts/emergent-trends-in-software.md
================
---
title: "Emergent Trends in Software"
author: "Andrew Riefenstahl"
description: "An exploration of the current state and future aspirations of AI, custom agents, and the evolving landscape of technology. This piece delves into the practical applications of AI, the challenges and opportunities it presents, and the vision for creating AI agents that tackle everyday tasks and support communities."
image:
  url: "../../assets/images/emergent-trends-software.jpg"
  alt: "Abstract representation of AI and software trends."
pubDate: 2024-06-09
tags:
  [
    "AI",
    "custom agents",
    "technology trends",
    "web development",
    "automation",
    "universal basic income",
    "creative tools",
  ]
---

# Emergent Trends in Software

The AI rush is here, but is it really as great as people make it out to be? I recently saw a meme that made me laugh. It depicted a startup founder suggesting, "Let's go ahead and add a half-stupid AI to help our users." Someone replied, "Oh, that's a great idea," and now it feels like every piece of technology is incorporating some sort of chat application.

Personally, I'm not interested in having a long conversation with an AI. Generally, I find myself refining my prompts and feeding it more and more context, which hardly feels like a conversation at this point. I am more interested in creating custom agents that perform micro-tasks and, when chained together, perform larger orchestrations that can serve a purpose for communities.

One thing I often think about, which I believe many people know but isn't spoken about enough, is how AI primarily returns large chunks of text. The real value emerges when we can convert those responses into JSON arguments that can be injected into our code to perform something useful.

OpenAI is currently the leading organization in having models create JSON arguments, and I'm surprised there isn't a strong secondary frontrunner. This is a bit shocking, but I could be incorrect.

My future aspirations involve building on my web development knowledge to help create an AI agent ecosystem that assists people on an individual level with tasks nobody likes to do, such as filing taxes or applying for visas and passports—things that are more complicated.

It's slightly upsetting that the first thing everyone does with AI is challenge humanity's ability to create art. As a musician, I've seen audio-based AI-generated content emerge. While it's not really taking jobs, it's giving new tools to people, making creation more accessible. This is great in the end, but I sometimes miss the days I never experienced, when there was a smaller music pool and the music mattered more, especially when musicians and artists spoke out politically. Nowadays, most top forty artists are afraid to speak out on anything. Anyway, I digress.

We need to get these custom AI agents to handle the jobs nobody wants to do, so we can move towards universal basic income and have more time to create art for our communities. The big takeaway here is that developing AI agents to solve specific problems is the kind of work I want to pursue. I'm thankful for my strong foundation in web application development, hosting, deployment, and testing. Now, it's time to grab my surfboard and ride the wave, while ignoring the noise that seems to emanate everywhere in the AI space.

As of summer 2024, I've started exploring LangChain and LangGraph to build agentic systems, and I'm loving every bit of it. These tools are transforming how I think about creating custom AI agents, making it easier to build complex, interactive workflows that can truly assist in tackling the everyday tasks we often dread. I'm excited to see where this journey takes me and how these technologies can be leveraged to create meaningful, impactful solutions.

All the best,

Sincerely,  
Andrew Riefenstahl

================
File: src/content/posts/moonlighters-tale-1.md
================
---
title: "Moonlighter Tales: Building Websites, Monitoring Systems, and a Custom RAG Application"
pubDate: 2024-09-22
description: "An overview of recent moonlighting projects including building a restaurant website with Astro, a custom monitoring solution using Deno, and an agent RAG application to assist with revising a 90,000-word book."
author: "Andrew Riefenstahl"
image:
  url: "../../assets/images/moonlighter-tales.jpg"
  alt: "Image of a laptop and code editor representing moonlighting web development projects."
tags:
  [
    "moonlighting",
    "Astro",
    "WordPress",
    "LangChain",
    "Deno",
    "web development",
    "RAG application",
    "monitoring systems",
    "freelance web development",
  ]
---

Let’s talk shop this time because most of the people visiting this site are probably recruiters. When they stumble upon this blog, they’re likely thinking, “I think we’ve found a winner!” (laughs).

So, what have I been up to? Well, I’ve had a few successful moonlighting projects recently.

### TolbertsRestaurant.com

First up is the new website for [**TolbertsRestaurant.com**](https://tolbertsrestaurant.com), which I built alongside [Riley Sklar](https://github.com/rileysklar). When the opportunity arose to create their new site, we presented them with a competitive offer. Not only did they save money, but they also got a superior product.

A few years ago, I built a standalone Next.js application as a music calendar for their events at **tolbertsmusic.com**. At the time, I was using the Next.js **Page Router**, which was an excellent real-world opportunity to grow my skills. While Page Router can be a bit tricky (just kidding, it’s not that bad), the real issue was deciding on a backend. They had a legacy WordPress site, so I set up a new WordPress instance as a dedicated content management system (CMS), with Next.js handling the front end. 

Lately, I’ve been using the **App Router** at work, which has been a significant improvement in terms of organization and flexibility.

Fast forward to today, they needed a new front end for their restaurant website, and we chose to use **Astro**. We actually started with my personal website template since it was bare-bones but had enriched SEO and excellent speed, essentially being HTML. From there, we started building.

We didn’t have a formal design team, but Riley, with his design background, and I, with my development experience, intuitively combined our skills. Riley focused more on the front end, while I handled the backend. It was a lot of fun, and we learned a ton along the way. Plus, getting paid is always a nice bonus!

One of the more significant learning moments came when I accidentally broke their email server. I switched the domain to use new **name records** in **Netlify**, where we hosted the site. A few days later, I got an email saying they hadn’t received any emails. It turned out that switching the domain broke their email setup because I didn’t configure the necessary DNS records like **MX** records and security protocols like **DMARC** properly. After fixing that, I realized how critical these email security measures are and even set up my own private email server for future projects. That was a real growth moment for me—nobody died, and we all learned something!

### Improved WordPress Development Flow

On the backend, there were some major improvements to our workflow. I had always struggled with how to version my WordPress themes. I used to work at an agency that had a homegrown system for this, but eventually, I found the package **WP-ENV**, which allowed me to spin up a WordPress instance in **Docker** and map it to my content folder. This meant I could quickly spin up a local WordPress development environment, get to work writing custom code, and then push changes to the remote server.

The best part? All of the changes were versioned in a specific **GitHub repository**, ensuring that everything was cleanly tracked. This workflow saved a ton of time and made deployments much smoother.

We hosted the site on **Amazon Lightsail**, primarily because it’s cost-effective and offers granular control. However, I’ve had my share of frustrations with AWS, especially when it comes to their development support, but that’s a topic for another day. The key takeaway is that I now have a rock-solid, low-cost workflow for setting up custom backends for freelance projects.

### Custom Monitoring Solution with Deno

For some of my freelance work, I realized I needed a custom monitoring solution. For example, AWS once dropped one of my services without warning, and I had to scramble to reboot it. They gave me no documentation, and the email they sent was super vague. After this experience, I knew I had to build something more reliable.

That’s when I created a script in **Deno** that runs on **Deno Deploy**. Every five minutes, the script pings the backend services for my clients, and if any of them fail to return a 200 status, I receive an immediate email notification. This monitoring solution is simple but effective, and it gives me peace of mind. Plus, I love Deno’s minimal setup and versatility.

### Agent RAG Application for My Book

Lastly, I want to talk about the **Agent RAG** (retrieval-augmented generation) application I’ve been working on. I wrote a book back in 2016-2017, totaling about 90,000 words, and editing has been a slow process. To help streamline this, I built a custom chatbot that allows me to ask questions about my book without needing to re-read everything.

Using **LangChain**, I set up a large language model that can access all my markdown files and notes. It creates embeddings of the content, allowing me to run natural language queries. This means I can get answers about specific sections or themes in the book, which has made revisions and edits much faster.

I also finally got around to learning **Streamlit** after seeing it mentioned in several tutorials. After an 8-9 hour hackathon, I had a fully functional chat application running in my local browser. This app can access my book, answer questions, and help with the editing process. 

The next step is to enhance the system by converting my LangChain setup to use **LangGraph**, which will give the chatbot more flexibility. Right now, every query results in a vector similarity search, but with LangGraph, the bot will be able to choose whether to respond normally or perform a retrieval, depending on the situation.

While the book assistant won’t be public since it’s an internal tool, I’m considering putting it on **GitHub** as an example for others.

So these are just a few of the amazing projects I've worked on over the past couple of months. They’ve brought me a lot of joy, and I've learned so much along the way. Each of them has taught me valuable lessons that I’ll continue to apply in future projects.

All the best,  
Much ❤️  
**Andrew**

================
File: src/content/posts/my-philosophies.md
================
---
title: "My Philosophies"
pubDate: 2023-12-31
description: "In the following passages, I delve into the core philosophies that have steered my life's journey: hard work, dreaming big, the importance of history, and the joy in the minutiae."
author: "Andrew Riefenstahl"
image:
  url: "../../assets/images/my-philosophies.jpg"
  alt: "Dayzee the Shih-Tzu working in her studio."
tags: ["philosophy", "ideologies", "mentality", "passion"]
---

In the following passages, I delve into the core philosophies that have steered my life's journey: hard work, dreaming big, the importance of history, and the joy in the minutiae. These are not just beliefs but the bedrock of my daily living, sculpted through years of experience from fencing arenas to the digital world of web development.

### Hard Work and Determination Always Pay Off

Hard work and determination always pay off. This is the fundamental principle that guides the decision-making process in my life. At its core, it's just the idea that the more time you spend working on something or a craft, the better it, and you, will become. This philosophy, this guiding principle, helps me structure my free time. If I have any, I should be spending it learning, growing, and challenging myself because if you don't put in the time, you will not see the kind of growth you generally desire in life.

When I was a teenager, my mother enrolled me in fencing classes — fencing as in sword fighting. I found it to be fun, rewarding, and challenging all at once. Previously, I had been practicing yoga for a year or two, but fencing offered a more communal experience. I naturally started attending regularly, which soon turned into six days a week: Monday through Friday after school, and then Saturday mornings. Eventually, I was traveling for tournaments across the United States. I'm very thankful for this time spent because I saw myself improving quickly and becoming a strong competitor. I was determined and I put in the hard work. That's all there is to it, but it was this discipline that I was able to take and apply to music later.

Later in life, I taught myself how to play basketball, a sport I hadn't been exposed to at a competitive level when I was younger. I put in the time, was determined, and had fun while getting a great workout. I even coached for two years, which is a whole other story.

Then there was the time after I finished school and had been working as a teacher for six years, feeling unfulfilled. I knew it was time for a change. That's when I began to study web development. Through hard work and determination, I was able to transition into a new career and found, once again, that I was enjoying it and having fun.

The act of learning, if one can even call it an act and not a response, is something I find great joy in. Taking areas of complete mystery and, after some time, transforming them into understanding through the persevering pursuit of dedication and hard work, will yield results.

## Follow Your Dreams

It is paramount to your success as a human being to first and foremost dream and have aspirations. If you do not have any aspirations, many of my principles will not resonate with you. I know for a fact that at one point, everyone has created dreams for themselves, and at one point or another, they let those go because of some barrier that has manifested in the physical world.

The preservation of one's dreams can be attributed primarily to having a good attitude, a growth mindset, and understanding that the world is knowable; it just takes time and energy to unlock those unknowns.

Dreams can be pursued doggedly, at the risk of damaging or bending the world around you, or they can be pursued with a compassionate understanding that, although you are where you are now, you are still continuing to take steps towards your ultimate goal of achieving your dreams.

When I reflect on the goals and dreams in my life and their connection to me, a few examples come to mind.
My first dream was to create computer games. As a child, they were the primary narrative in my life, with dramatic highs and lows and epic stories of adventure and impossible challenges to overcome. This dream has not been realized yet, but it has remained at the forefront of my mind as I've progressed through life. I now appreciate video games as a special kind of art form, especially since studying computer science, and my continued passion for music and storytelling.

In a way, I know I'll circle back to this topic again. This dream is one of my favorites because I've always felt like I've been slowly approaching the problem from all angles as I've progressed through life: studying yoga, swordplay, the liberal arts, anthropology, sociology, psychology, sports, and experiences along the way. Performance arts and programming somehow got in there too. I think I will return to this dream in the near future, or maybe not at all, but it seems I'm doing a pretty good job of scoping out that project.

Another dream I've had is to be a music producer, to be a member of the community, and to help people fulfill their visions of art, especially in songs and songwriting. This dream has become a reality and has brought me a unique richness and fulfillment.
I often don't take a lot of time to discuss my fervent passion for music. To me, music is art and science; it is nature; it is the universe captured into a unit of time. Sound, time, and space are intertwined. Sound is a unique property of our existence, given the environment we live in—a unique chamber of air pressure and chemicals known as the troposphere, where all known life exists. When we strike a drum or ignite the air with electric guitars, we are amplifying our world in this very unique, special place in the universe. When you combine that with the human experience and the art form of songwriting, you get a topic worthy of its own blog. But to circle back, one of my dreams is to be a music producer.

Other examples of dreams, to give you context, include creating a space for humans, artists, and thinkers to come together in a stimulating environment. In today's economy, that translates to having a nice house, which is no easy task.

All of these dreams are simple examples of a person finding something to pursue in the future, guiding all those little actions from day to day—the minutiae. Bottom line: follow your dreams. Don't be afraid to dream.

## Study the Past

If there's one thing uniquely special about humanity, it's that we have collective learning backing us up. Collective learning is basically the entire body of knowledge that the human experience has put together, and if you're not leveraging that to have a more productive and successful life, you're really doing a disservice to all of mankind.

Using collective learning is basically having respect for what has come before, understanding that through humans' unique powers of pattern recognition, we can learn from the past to affect the present, to change the future so that it more appropriately aligns with our dreams and aspirations.

There are literally thousands, upon hundreds of thousands, of stories about humans and all of their different trials and tribulations and successes in the form of collective learning. If that doesn't get you motivated to go out and pursue your dreams, then we need to work on your attitude.

Collective learning can also be applied not just to deep time but to recognizing cultural trends in society. By recognizing cultural trends in society and then applying them to even personal encounters with friends, we begin to see patterns emerge, and we can work hard to recognize potential issues that may arise and solve them before they become a major problem.

Examples I have of the benefits of studying the past start from a technical perspective. In web development, technologies are always changing rapidly, which is quite exciting. However, despite the rapid changes, trends tend to come full circle. This observation leads one to consider the lurking variables that influence these patterns. In web development, software engineering, and computer programming, it's about choosing the right tool for the job without overcomplicating it. This approach depends on the unique set of needs or the use case of the project. Having this mentality has given me an appreciation for all approaches to software engineering and development. I've learned there is no single right or wrong way to do anything, and at the end of the day, many other variables come into play.

Another example of the benefits of studying the past is the understanding of large-scale human geography, or anthropology. It involves taking a step back from oneself and placing oneself in the context of a much larger society. This task is not as easy as one might think. It's challenging to imagine a world without oneself or to not focus on personal needs, as this is counterintuitive to survival. However, knowing about the past can help one weather, predict, or avoid not just physical situations in the future but also mental anguish or issues related to mental health.

This understanding can be taken even further if you consider the cosmos, the universe, and the galaxies, all of which are governed by a set of fundamental rules. With this knowledge, the world, the universe, and the galaxies become a bit more knowable. This bit of understanding about the expansiveness, and at the same time, the insignificance of it all, can help to release the self and broaden one's perspective.

Fundamentally, I believe you can become very excited about the magnificence of our universe, and there are times when it can make you feel very insignificant. However, this isn't necessarily a bad thing. It provides a dynamic range of experiences to explore, which can bring a sense of peace and a deeper connection to those around you by opening up to the moment and understanding how unique and special our existence is.

I wish there were a better way to see what my ancestors looked like just a few hundred years ago. I'm looking forward to the digital archaeology of the future and the insights we will be able to gain about ourselves by studying the past.

## Enjoy the Little Things

No matter how intense and dramatic life can be, or the great achievements you may receive, the real essence of life lies in the finer things, the details. This is why, for the last philosophy I'll discuss today, I suggest you begin to appreciate the little things.

No pun intended, but my favorite little thing to enjoy is my pet dog, Dayzee. She's a Shih Tzu and very sweet. She likes to go for walks and loves fresh white chicken with a little rice mixed into her dry food. She enjoys sunbathing, sniffing the grass, and wandering around the yard. The time I spend with her might not move mountains on a geopolitical scale, but it has the power to move my heart and helps me find appreciation in all things in life.

Enjoying the little things can lead to a broader level of contentment. You'll find contentment in sitting outside in the sun, walking your dog, taking a drive, sipping coffee, surfing the web, learning something new, or finally reading that book you've always wanted to. There are many amazing aspects of our world, and everyone deserves to enjoy the little things.

## Stewardship

I know I mentioned that I didn't have any more philosophies, but the appreciation of the little things has led me to another philosophy I have: stewardship. At our core, in our relationship with the planet and especially with our unique perception of the universe, we, as humans, should see ourselves as stewards and guardians of the planet. If we have the ability to watch over even just a small piece of it, we should take comfort in maintaining our surroundings because fundamentally, this will mean future generations will inherit a rich tapestry of life. Stewardship is one way we can pass on a rich existence to our future, whether through raising children, maintaining homeostasis with our ecosystem, gardening, landscaping, or building. However, it should always be done with a connection to avoiding excess and maintaining balance in the land. Stewardship can even be as unique as caring for your friends and taking the time and effort to do so.

The best example to start with is gardening. Plants are our siblings on the tree of life; we have grown with them. To view them as anything less than living—hell, even non-sentient—is to not value them enough. They may not be Shakespeare, but they are tall, strong, and can provide shelter, resources, protection, color, rustling noises, and air to breathe. Come to think of it, they might be better than Shakespeare. It's a shame that many of us raised in cities don't spend as much time with nature. Working with the land may be a harder life on the body, but it's much more in tune with the realities of our world. If you can't have a garden, just start with one plant—a jalapeno plant, perhaps. You'll be very satisfied.

Another example of stewardship is if something breaks in your presence, and it involves the place where you live, you should try to fix it. I have a strange life; I'm a renter in a beautiful home that I probably will never own. It's old, and the landlord is even older; things tend to break. I could ask him to fix a couple of tiles in the bathroom, but he'd probably say no. To be honest, I'm not much of a handyman. However, I have a great appreciation for order in a world of chaos. I do think the world is in a constant state of deterioration; chaos rules. But by us caring for something, no matter how small or insignificant, we bring order to a world of chaos. The simple act of caring and taking the initiative to try to fix something, or at least give it the attention it deserves, will come back to you with great rewards. As Benjamin Franklin once said,

> An ounce of prevention is worth a pound of cure.

What is stewardship? My definition is to care for the world around you—to care for the plants, the animals, the people, and the community.

# In Conclusion

This is my first attempt to reflect on the life I'm trying to live and to transcribe it into text so that others may share a glimpse into my mindset. Trust me, there will be plenty more philosophies as I start to practice the delicate art of revealing my mind.

Articulating my thoughts has been a reflective exercise, enhancing my understanding of my beliefs and highlighting the need to address universalism and inclusivity. I hope my insights have resonated with you and encourage you to also explore and record your own fundamental principles.

I want to take a second to recognize my community at this time of Austin, Texas, and my friends and family across the world by saying thank you for nurturing me, and I hope with time and through my writings, people can begin to see and appreciate the world around them in a new way.

================
File: src/content/posts/react-slick-horizontal-slider.md
================
---
title: "React Slick Horizontal Slider"
pubDate: 2024-01-09
description: "A practical guide on developing an efficient, responsive horizontal scroll slider using React Slick, tailored for modern web projects."
author: "Andrew Riefenstahl"
image:
  url: "../../assets/images/react-slick-horizontal-slider.jpg"
  alt: "Illustration of a responsive horizontal slider in action."
tags:
  [
    "React",
    "web development",
    "React Slick",
    "UI components",
    "Gatsby",
    "Nextjs",
  ]
---

## Introduction

Working in a startup often requires adaptability and creative solutions, especially in web development. A common feature that has continually resurfaced in my projects is the need for a horizontal scroll slider. Despite the prevalence of various libraries and frameworks, finding a straightforward, vanilla CSS-based solution has been challenging. Today, I tackled this issue head-on for a landing page that featured multiple information cards. To avoid extensive vertical scrolling, I turned to an old ally: React Slick.

## The Challenge

The primary challenge was incorporating a horizontal scroll slider that is both efficient and aesthetically pleasing. After a thorough online search for a vanilla CSS solution yielded no satisfying results, I decided to create my own using React Slick. This library, while having decent documentation, often presents quirky challenges, especially when dealing with logo carousels and maintaining aspect ratios.

## Installing React Slick

To incorporate React Slick into your project, start by installing it through NPM. In your project directory, execute the following command:

```shell
npm install react-slick --save
```

This command adds React Slick to your project, allowing you to leverage its carousel functionality in your web applications.

Note: In our `HorizontalSlider` component, we're using a different method to include the required CSS for React Slick, which will be detailed in the component section.

## React Slick Horizontal Slider Component

Below is the code for the `HorizontalSlider` component I developed. It uses React Slick to create a responsive, customizable horizontal scroll slider.

### Code Snippet

```jsx
import React from "react";
import Slider from "react-slick";
import { Helmet } from "react-helmet";

const HorizontalSlider = ({ children, className }) => {
  const settings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 3,
    slidesToScroll: 1,
    arrows: false,
    responsive: [
      {
        breakpoint: 1024,
        settings: { slidesToShow: 3, slidesToScroll: 1 },
      },
      {
        breakpoint: 768,
        settings: { slidesToShow: 2, slidesToScroll: 2 },
      },
      {
        breakpoint: 480,
        settings: { slidesToShow: 1 },
      },
    ],
  };

  const sliderClassName = `horizontal-slider ${className}`;

  return (
    <div className={sliderClassName}>
      <Helmet>
        <link
          rel="stylesheet"
          type="text/css"
          charset="UTF-8"
          href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css"
        />
        <link
          rel="stylesheet"
          type="text/css"
          href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css"
        />
      </Helmet>
      <Slider {...settings}>{children}</Slider>
    </div>
  );
};

export default HorizontalSlider;
```

Important that you make sure the parent element for this component has `width: 100%`, and it is likely that the parent or the slide children themselves will need to have a set `height`.

I've included React Helmet to dynamically add the CSS scripts to the head of the page. This is necessary because the slider is a nested child component, and the styles need to be added at the top level of the document. Plus you might not want to add this script to every page on your website.

If you're using `nextjs` you can just use the head component from `next/head`, and come to think of it the latest gatsby may have a different way of handling adding elements to the head - but that maybe at the page component level.

This approach can lead to optimization issues. When the JavaScript loads client-side, it fetches these styles, which happens late in the page load process. To mitigate this, it's advisable to keep these components below the fold to avoid a "flash of unstyled content." Despite these concerns, I haven't noticed significant issues lately.

> **Version Alert**: The CSS links included in the component are specific to the version used at the time of this writing. Always check for the latest version of React Slick to ensure compatibility and access to the most up-to-date features.

```plaintext
https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css
https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css
```

Another huge headache I was having on mobile was that when there's a single card showing and you slide to the next there was no `margin` between them I had to do some digging but here's what I found to fix that.

```css
.horizontal-slider .slick-slide {
  padding: 0 8px; /* Adjust to Taste */
  box-sizing: border-box;
}
```

I'm using a specific selector class on the parent element so that in the case I have multiple sliders across my application these styles won't fight each other.

## Conclusion

This React component demonstrates a practical approach to creating a responsive horizontal slider. It's designed to be easily integrated and customized within various web projects. By sharing this solution, I hope to assist others facing similar challenges and contribute to the web development community.

> Update March 24th, 2024: I started using the `shadcn/ui` component library and then I discovered their carousel component and its underlining technology which is `embra-carousel`. I absolutely loved it and you need to try it! They have great toolset and awesome examples to get you started.

================
File: src/content/posts/rsi-developer-cautionary-tale-and-how-talon-saved-my-life.md
================
---
title: "My Repetitive Stress Injury Story: A Cautionary Tale"
author: "Andrew Riefenstahl"
description: "An in-depth journey through the trials of enduring a repetitive stress injury, the invisible battle with chronic pain, and the eventual road to recovery through self-advocacy and innovative solutions like Talon speech software. This story aims to shed light on the often overlooked aspects of workplace injuries, mental health struggles, and the resilience required to navigate through them."
image:
  url: "../../assets/images/rsi-blog-header.jpg"
  alt: "An abstract representation of recovery and perseverance."
pubDate: 2024-03-25
tags:
  [
    "talon speech software",
    "repetitive stress injury",
    "ganglion cyst",
    "chronic pain",
    "disability",
    "recovery",
    "mental health",
  ]
---

The story I'm about to share is for those who feel lost or discouraged, enduring an injury that's invisible to others and sometimes even misunderstood.

In late July 2023, I experienced a wrist blowout. It was a Sunday, and I had been deeply engrossed in making meticulous edits to drum machine MIDI for my album. After finishing, I couldn't quite remember if my hands felt overworked, but I then shifted to gaming, embracing my "Sunday funday" with no obligations. After gaming for another three hours, my hands began to tire; I felt fatigued and discomfort setting in. I logged off, but it was too late — my tendons had given way.

Unbeknownst to me the foundation for the wrist injury had started a few weeks earlier. I had intensified my weightlifting routine, perhaps too zealously. I recall a moment of particular strain as I pushed for one more bicep curl, inspired by Arnold Schwarzenegger's resilience. This ambition caused spinal compression which eventually created a degenerative disk in my C5-C6 vertebrae setting the foundation for my wrist issues.

Despite the clear signals from my body to rest, I persisted. The following day, as a software developer, I continued my usual activities and even attempted to strengthen my wrist with a 25-pound weight, thinking it would alleviate the tendonitis. This decision only dug me deeper into trouble. During a yoga session, while in the plank pose, I felt a significant give in my right wrist, a moment I pinpoint to the origin of a ganglion cyst that developed later.

I worked excessively long, ignoring the necessity for rest, driven by a wish for a time machine. Eventually, I scheduled an appointment with an orthopedic hand specialist, opting to pay out-of-pocket for expert advice. This decision spiraled into a larger narrative of navigating the healthcare system, a story for another time.

The doctor offered little help, and I continued working until, in October, I urgently requested time off from work, fearing I wouldn't survive without it. This break was a turning point, allowing me to rest fully for the first time and discover [Talon](https://talon.wiki/getting_started/), the speech control software that became my lifeline. I dedicated two weeks to mastering computer use via voice control, as my hands were in too much pain for any physical task.

As I continued to work through the pain, I managed to schedule an MRI (Magnetic Resonance Imaging). Upon reviewing the results, the hand specialist I was seeing seemed baffled and offered no real assistance — it was as if he hadn't even looked at the report.

Determined to find answers, I embarked on a journey of self-advocacy and thorough research. Navigating the complexities of the healthcare system, I secured occupational therapy for my hand and eventually consulted a second doctor for another opinion on my MRI results.

The turning point came with the occupational therapist, who examined my MRI report and identified intriguing findings that aligned with my symptoms. It had been over seven months of enduring not only physical pain but also significant mental and emotional turmoil. She pinpointed a ganglion cyst in the report, located precisely where my chronic pain was most intense.

A visit to another hand surgeon provided clarity; he showed me the exact location of the ganglion cyst on the MRI, confirming the source of my chronic pain, which seemed to be in my radiocarpal joint, or something to that effect.

This ordeal taught me an invaluable lesson: if you're in pain or discomfort, it's crucial to stop and rest rather than pushing through, as doing so only worsens your condition. Of course, this advice is easier said than done, especially when financial stability and lack of a support network are concerns. In hindsight, I wish I had prioritized my health over my job from the beginning.

About a week after confirming the diagnosis of the ganglion cyst, I've been able to concentrate on strengthening and healing, not just the affected area but also my arms, shoulders, and neck. This focus has brought significant improvement and relief.

I share this story in the hope that it reaches others suffering from repetitive stress injuries. While I've omitted many details of my treatment journey, I believe it's crucial to discuss the early struggle with tendinitis. Initially, relief was elusive; I resorted to warm baths and anti-inflammatories, but the pain was almost unbearable, underscoring the importance of rest and proper care from the outset.

I found relief and recovery from my chronic repetitive stress injury through several methods. Stretching and heat therapy were key; stretching provided immediate relief when needed, and heat therapy helped by improving blood flow, which eased the pain and brought essential nutrients to the affected area. Additionally, doing strengthening exercises little by little allowed me to reduce my chronic pain and experience it less frequently.

I also dealt with a cervical neck issue, which made my situation even harder. However, I've seen significant improvement in this area as well. By following my occupational therapist's advice and doing exercises tailored to my specific needs, I've been able to slowly increase the weights I use in strength training. Looking back, I realize that if I had addressed these issues sooner and stopped doing the things that worsened my condition, I could have avoided a lot of the pain and difficulty.

This narrative serves as a cautionary tale about the perils of repetitive stress injuries, which stem from excessive use of the mouse and keyboard, inadequate rest, and pushing too hard during recovery, leading to conditions like the ganglion cyst. However, this story harbors an optimistic undertone. Trust me, this journey has spurred significant personal growth. I've had to rely on untapped skills and attributes to find new ways to engage and entertain myself, granting me a fresh perspective and a deeper appreciation for life's blessings.

As I continue on my path to recovery, I'm grateful for the lessons learned and the progress made. It's a long road ahead, but I'm optimistic. A heartfelt shoutout to the open-source community and Talon speech software — your innovations have been instrumental in my journey. Peace out.

================
File: src/content/posts/second-one.md
================
---
title: TBD Post 🛠️
author: Andrew Riefenstahl
description: "Working on another blog post! Under construction."
image:
  url: "../../assets/images/second-one.jpg"
  alt: "Dayzee the Shih Tzu editing my latest blog post."
pubDate: 2023-12-31
tags: ["placeholder", "blogging", "tbd", "research"]
---

Hello this is just a placeholder blog 🛠️ until I get around to writing some more content please enjoy the cute image and take some time to read my first blog, [My Philosophies](/posts/my-philosophies)

================
File: src/content/config.ts
================
// Import utilities from `astro:content`
import { z, defineCollection } from "astro:content";
// Define a `type` and `schema` for each collection
const postsCollection = defineCollection({
  type: "content",
  schema: ({ image }) =>
    z.object({
      title: z.string(),
      pubDate: z.date(),
      description: z.string(),
      author: z.string(),
      image: z.object({
        url: image().refine((img) => img.width >= 1080, {
          message: "Cover image must be at least 1080 pixels wide!",
        }),
        alt: z.string(),
      }),
      tags: z.array(z.string()),
    }),
});
// Export a single `collections` object to register your collection(s)
export const collections = {
  posts: postsCollection,
};

================
File: src/layouts/Layout.astro
================
---
import Header from "../components/Header.astro";
import { ViewTransitions } from "astro:transitions";
import ogImage from "../assets/ar-ogimage-optimized.png";
import "../styles/globals.css";
interface Props {
  metaTags: {
    title: string;
    description: string;
    image?: string;
    url: string;
    twitterHandle?: string;
  };
}

const { metaTags } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{metaTags.title}</title>
    <meta name="description" content={metaTags.description} />
    <meta property="og:title" content={metaTags.title} />
    <meta property="og:description" content={metaTags.description} />
    <meta property="og:image" content={metaTags.image || ogImage.src} />
    <meta property="og:url" content={metaTags.url} />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta
      name="twitter:creator"
      content={metaTags.twitterHandle || "@riefer02"}
    />
    <meta name="twitter:title" content={metaTags.title} />
    <meta name="twitter:description" content={metaTags.description} />
    <meta name="twitter:image" content={metaTags.image || ogImage.src} />
    <link rel="canonical" href={metaTags.url} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <ViewTransitions />
  </head>
  <body class="bg-stone-200 text-stone-800">
    <Header title={metaTags.title} />
    <div class="px-4 py-8 lg:py-2">
      <slot />
    </div>
    <style is:global>
      :root {
        --accent: 136, 58, 7;
        --accent-light: 224, 204, 250;
        --accent-dark: 49, 10, 101;
        --accent-gradient: linear-gradient(
          45deg,
          rgb(var(--accent)),
          rgb(var(--accent-light)) 30%,
          white 60%
        );
      }
    </style>
  </body>
</html>

================
File: src/layouts/MarkdownPostLayout.astro
================
---
import Layout from "./Layout.astro";
const { frontmatter } = Astro.props;

const metaTags = {
  title: frontmatter.title,
  description: frontmatter.description,
  image: frontmatter.image.url.src,
  url: `https://andrewriefenstahl.com/posts/${frontmatter.slug}`,
};
---

<Layout metaTags={metaTags}>
  <div class="mx-auto max-w-2xl py-6 pt-10 lg:pt-6">
    <p class="text-xs text-gray-600 sm:text-sm">
      {frontmatter.pubDate.toString().slice(0, 10)}
    </p>
    <h1 class="mb-4 mt-2 text-2xl font-bold text-gray-900 sm:text-4xl">
      {frontmatter.title}
    </h1>
    <p class="mb-4 text-base italic text-gray-700 sm:text-lg">
      {frontmatter.description}
    </p>
    <p class="mb-6 text-sm font-medium">
      Written by: <span class="text-indigo-600">{frontmatter.author}</span>
    </p>
    <img
      class="mb-8 h-auto w-full rounded-lg shadow-md"
      src={frontmatter.image.url.src}
      alt={frontmatter.image.alt}
    />
    {
      frontmatter.tags && frontmatter.tags.length > 0 && (
        <div class="mb-4 flex flex-wrap gap-2">
          {frontmatter.tags.map((tag) => (
            <span class="rounded-3xl bg-stone-400 px-2.5 py-1.5 text-xs font-semibold text-stone-100">
              {tag}
            </span>
          ))}
        </div>
      )
    }
    <article
      class="prose prose-sm sm:prose prose-stone lg:prose-lg xl:prose-xl"
    >
      <slot />
    </article>
  </div>
</Layout>

================
File: src/lib/key-projects.json
================
{
    "projects": [
      {
        "name": "Enterprise Site - Propane.com",
        "url": "https://propane.com",
        "description": "Spearheaded the development of Propane.com, an enterprise-level WordPress site featuring advanced customizations and integrations. Implemented a robust CI pipeline, 2FA authentication via OAuth Okta, and developed stateful web applications. Enhanced user engagement by integrating Algolia for advanced search capabilities and HubSpot for CRM. Additionally, optimized React-based components for improved site performance and user experience."
      },
      {
        "name": "Start-Up Sites - Flockx.io & Community.Flockx.io",
        "url": "https://community.flockx.io",
        "description": "Led the front-end development of Flockx.io and its companion app using Gatsby and Next.js, establishing a seamless integration with a Django backend. Incorporated cutting-edge features like interactive Mapbox maps and ElasticSearch for dynamic content delivery. Pioneered the use of Intercom and Slack integrations to enhance user engagement and communication, significantly boosting the platform's SEO and overall digital presence."
      },
      {
        "name": "Non-Profit Charity - ABowlofRed.com",
        "url": "https://abowlofred.com",
        "description": "Orchestrated the development of ABowlofRed.com, a Gatsby-based front-end platform, with a focus on high-performance and accessible design. Utilized Strapi CMS on AWS EC2 with Node.js for content management, ensuring optimal image rendering and SEO-friendly metadata. Successfully integrated Stripe for secure ticket transactions, contributing to a significant fundraising success of around $19k."
      },
      {
        "name": "E-commerce Site - Junkerri.com",
        "url": "https://junkerri.com",
        "description": "Engineered Junkerri.com, a sleek and efficient e-commerce platform using Next.js. Implemented Stripe for a streamlined payment process, and integrated SparkPost for effective customer communication. This project highlights my ability to create user-centric shopping experiences with robust back-end functionalities."
      },
      {
        "name": "AI Bible Quote Generator",
        "url": "https://theosapp.com",
        "description": "Developed an innovative Bible quote generator application utilizing Supabase, Edge Functions, Deno, and OpenAI's frameworks and REST APIs. This app offers users personalized Bible quotes related to their life experiences, employing vector similarity search to ensure unique results. The application integrates advanced AI capabilities to provide context and explanations for each quote, enhancing the user experience with meaningful insights and support."
      },
      {
        "name": "Electron Chat App",
        "url": "https://github.com/riefer02/electron-chat-app",
        "description": "Conceptualized and developed a cutting-edge chat application using React and Electron, demonstrating expertise in cross-platform software development. This app features real-time messaging capabilities, a user-friendly interface, and high-performance chat functionalities. It showcases my proficiency in seamlessly blending front-end technologies with Electron for a cohesive desktop application experience."
      },
      {
        "name": "Steel Calculator App - Steelcalculator.xyz",
        "url": "https://steelcalculator.xyz",
        "description": "Developed a highly specialized steel calculator application, tailored for efficiency improvements in steel-related calculations. This microservice web application, primarily built using Vite, JavaScript, CSS, and HTML, was customized for a client to streamline their work processes. The application has been a valuable tool, actively used to this day for its simplicity and effectiveness in steel calculations, demonstrating my ability to deliver focused and client-specific solutions in web development."
      }
    ]
  }

================
File: src/lib/professional-skills.json
================
{
    "skills": [
      {
        "name": "Web Development",
        "description": "Mastery in modern web technologies including React, Gatsby.js, Next.js, WordPress, Astro, Vue, Nuxt.js and Vite, delivering responsive and dynamic user experiences."
      },
      {
        "name": "Full Stack Development",
        "description": "Skilled in developing robust web applications with Python (Django, Flask), PHP, Express.js, Deno, and Node.js. Expertise in integrating diverse front-end and back-end technologies for efficient, scalable solutions."
      },
      {
        "name": "AI Solutions & Emergent Technologies",
        "description": "Emergent leader in AI solutions, creating and utilizing Retrieval-Augmented Generation (RAG) applications, performing vector similarity searches, and developing custom agents with specialized toolsets for comprehensive and innovative solutions."
      },
      {
        "name": "CMS Integration",
        "description": "Skilled in deploying and customizing content management systems like Strapi CMS and Headless WordPress for dynamic content delivery."
      },
      {
        "name": "E-commerce Integration",
        "description": "Proficient in implementing e-commerce solutions with Stripe, enhancing online transaction capabilities for businesses."
      },
      {
        "name": "API Development",
        "description": "Adept at building and managing APIs, enabling efficient data exchange and integration with various services and frameworks."
      },
      {
        "name": "Database Management",
        "description": "Competent in handling complex data structures with PostgreSQL, MongoDB, and Supabase, ensuring data integrity and performance."
      },
      {
        "name": "Emerging Technologies",
        "description": "Forward-thinking in adapting new technologies like Deno and blockchain, staying ahead in the tech curve."
      },
      {
        "name": "Web Applications",
        "description": "Advanced proficiency in building scalable, responsive web applications. Expertise in modern JavaScript frameworks, backend integration, and performance optimization."
      },
      {
        "name": "Leadership & Mentorship",
        "description": "Skilled at mentoring junior developers, fostering a collaborative team environment, and driving continuous learning and innovation."
      },
      {
        "name": "Other Technologies",
        "description": "Versatile in utilizing a range of languages and tools including TypeScript, Rust, PHP, CSS, HTML, and Python, showcasing a comprehensive tech skillset."
      }
    ]
  }

================
File: src/lib/utils.ts
================
import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

================
File: src/pages/posts/[...slug].astro
================
---
import { getCollection } from "astro:content";
import MarkdownPostLayout from "../../layouts/MarkdownPostLayout.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection("posts");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<MarkdownPostLayout frontmatter={entry.data}>
  <Content />
</MarkdownPostLayout>

================
File: src/pages/posts/index.astro
================
---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import PostCard from "../../components/PostCard.astro";

const allPosts = await getCollection("posts");

const sortedPosts = allPosts.sort((a, b) => {
  return new Date(b.data.pubDate) - new Date(a.data.pubDate);
});

const metaTags = {
  title: "Archive of Blog Posts - Andrew Riefenstahl",
  description:
    "Dive into a comprehensive collection of all my blog posts. Explore various topics, insightful articles, and more spanning from 2023 to the present.",
  url: "https://andrewriefenstahl.com/posts",
};
---

<Layout metaTags={metaTags}>
  <main class="mx-auto max-w-4xl py-6">
    <div class="text-center">
      <h1 class="mb-4 pt-2 sm:pt-0 text-2xl font-semibold md:text-3xl lg:text-4xl">
        Blog Posts
      </h1>
      <h2 class="mx-auto mb-4 max-w-xs text-lg sm:max-w-xl sm:text-xl">
        Dive into a comprehensive collection of all my blog posts.
      </h2>
    </div>
    <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 xl:grid-cols-3">
      {sortedPosts.map((post) => <PostCard post={post} />)}
    </div>
  </main>
</Layout>

================
File: src/pages/index.astro
================
---
import Layout from "../layouts/Layout.astro";
import { Image } from "astro:assets";
import profileImage from "../assets/Andrew-Riefenstahl.jpg";
import Analytics from "../components/Analytics.astro";
import professionalSkills from "../lib/professional-skills.json";
import keyProjects from "../lib/key-projects.json";

const metaTags = {
  title: "Andrew Riefenstahl: Full Stack Web Developer",
  description:
    "Discover Andrew Riefenstahl's journey in full stack web development, showcasing skills in modern technologies and innovative solutions.",
  url: "https://andrewriefenstahl.com",
  twitterHandle: "@riefer02",
};
---

<Layout metaTags={metaTags}>
  <Analytics />
  <main class="prose mx-auto max-w-3xl">
    <div class="text-center">
      <Image
        src={profileImage}
        alt="Andrew Riefenstahl smiling with his arms crossed against a multicolored background with hues of purple and maroon to pink."
        width="800"
        height="800"
        class="mx-auto mb-4 w-[280px] rounded-full md:mb-8"
      />
      <h1 class="mb-4 text-2xl font-semibold md:text-3xl lg:text-4xl">
        Andrew Riefenstahl
      </h1>
    </div>
    <p class="mb-6 indent-8 text-base">
      With a proven track record of innovation and problem-solving, Andrew
      Riefenstahl stands at the forefront of digital transformation. His
      expertise in web and software development drives businesses and projects
      to new heights of success.
    </p>

    <!-- Professional Skills Section -->
    <section class="mb-8">
      <h2 class="mb-3 text-lg font-semibold sm:text-xl">Professional Skills</h2>
      <ul class="flex list-disc flex-col gap-2 pl-5">
        {
          professionalSkills.skills.map((skill) => (
            <li key={skill.name}>
              <strong>{skill.name}:</strong> {skill.description}
            </li>
          ))
        }
      </ul>
    </section>

    <!-- Key Projects Section -->
    <section class="mb-8">
      <h2 class="mb-3 text-lg font-semibold sm:text-xl">Key Projects</h2>
      <ul class="list-disc pl-5">
        {
          keyProjects.projects.map((project) => (
            <li key={project.name}>
              <a
                href={project.url}
                target="_blank"
                class="no-underline hover:underline"
              >
                <div class="mb-4">
                  <h3 class="text-md font-bold">{project.name}</h3>
                  <p class="text-md lg:text-base">{project.description}</p>
                </div>
              </a>
            </li>
          ))
        }
      </ul>
    </section>

    <!-- Connect with Me Section -->
    <section class="mb-8">
      <h2 class="mb-3 text-lg font-semibold sm:text-xl">Connect with Me</h2>
      <ul class="list-none pl-0">
        <li class="mb-2">
          <a
            href="https://www.linkedin.com/in/andrewriefenstahl/"
            target="_blank"
            class="text-blue-600 hover:text-blue-800"
            >LinkedIn: Andrew Riefenstahl</a
          >
        </li>
        <li class="mb-2">
          <a
            href="https://github.com/riefer02"
            target="_blank"
            class="hover: text-gray-900">GitHub: @riefer02</a
          >
        </li>
        <li class="mb-2">
          <a
            href="https://twitter.com/riefer02"
            target="_blank"
            class="text-blue-400 hover:text-blue-600">Twitter: @riefer02</a
          >
        </li>
        <li class="mb-2">
          Email: <a
            href="mailto:andrew.riefenstahl@gmail.com"
            class="text-green-600 hover:text-green-800"
            >&#97;&#110;&#100;&#114;&#101;&#119;&#46;&#114;&#105;&#101;&#102;&#101;&#110;&#115;&#116;&#97;&#104;&#108;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a
          >
        </li>
      </ul>
    </section>
  </main>
</Layout>

<style>
  /* You can add custom Tailwind CSS styles here if needed */
</style>

================
File: src/styles/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;
 
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 20 14.3% 4.1%;

    --card: 0 0% 100%;
    --card-foreground: 20 14.3% 4.1%;
 
    --popover: 0 0% 100%;
    --popover-foreground: 20 14.3% 4.1%;
 
    --primary: 24 9.8% 10%;
    --primary-foreground: 60 9.1% 97.8%;
 
    --secondary: 60 4.8% 95.9%;
    --secondary-foreground: 24 9.8% 10%;
 
    --muted: 60 4.8% 95.9%;
    --muted-foreground: 25 5.3% 44.7%;
 
    --accent: 60 4.8% 95.9%;
    --accent-foreground: 24 9.8% 10%;
 
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 60 9.1% 97.8%;

    --border: 20 5.9% 90%;
    --input: 20 5.9% 90%;
    --ring: 20 14.3% 4.1%;
 
    --radius: 0.5rem;
  }
 
  .dark {
    --background: 20 14.3% 4.1%;
    --foreground: 60 9.1% 97.8%;
 
    --card: 20 14.3% 4.1%;
    --card-foreground: 60 9.1% 97.8%;
 
    --popover: 20 14.3% 4.1%;
    --popover-foreground: 60 9.1% 97.8%;
 
    --primary: 60 9.1% 97.8%;
    --primary-foreground: 24 9.8% 10%;
 
    --secondary: 12 6.5% 15.1%;
    --secondary-foreground: 60 9.1% 97.8%;
 
    --muted: 12 6.5% 15.1%;
    --muted-foreground: 24 5.4% 63.9%;
 
    --accent: 12 6.5% 15.1%;
    --accent-foreground: 60 9.1% 97.8%;
 
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 60 9.1% 97.8%;
 
    --border: 12 6.5% 15.1%;
    --input: 12 6.5% 15.1%;
    --ring: 24 5.7% 82.9%;
  }
}
 
@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

================
File: src/env.d.ts
================
/// <reference path="../.astro/types.d.ts" />
/// <reference types="astro/client" />

================
File: .gitignore
================
# build output
dist/

# generated types
.astro/

# dependencies
node_modules/

# logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# environment variables
.env
.env.production

# macOS-specific files
.DS_Store

.vscode

================
File: .nvmrc
================
20.10.0

================
File: .prettierrc
================
{ "plugins": ["prettier-plugin-tailwindcss"] }

================
File: astro.config.mjs
================
import { defineConfig } from "astro/config";
import tailwind from "@astrojs/tailwind";
import sitemap from "@astrojs/sitemap";
import react from "@astrojs/react";

// https://astro.build/config
export default defineConfig({
  site: "https://andrewriefenstahl.com",
  integrations: [
    tailwind({
      applyBaseStyles: false,
    }),
    sitemap(),
    react(),
  ],
});

================
File: components.json
================
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "new-york",
  "rsc": false,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.mjs",
    "css": "./src/styles/globals.css",
    "baseColor": "stone",
    "cssVariables": true,
    "prefix": ""
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils"
  }
}

================
File: package.json
================
{
  "name": "andrew-riefenstahl-personal",
  "type": "module",
  "version": "0.0.1",
  "scripts": {
    "dev": "astro dev",
    "start": "astro dev",
    "build": "astro build",
    "preview": "astro preview",
    "astro": "astro"
  },
  "dependencies": {
    "@astrojs/react": "^3.0.10",
    "@astrojs/sitemap": "^3.0.4",
    "@astrojs/tailwind": "^5.1.0",
    "@radix-ui/react-avatar": "^1.1.1",
    "@radix-ui/react-icons": "^1.3.0",
    "@radix-ui/react-slot": "^1.0.2",
    "@tailwindcss/typography": "^0.5.10",
    "@types/react": "^18.2.58",
    "@types/react-dom": "^18.2.19",
    "astro": "^4.2.6",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.1.0",
    "lucide-react": "^0.452.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "tailwind-merge": "^2.2.1",
    "tailwindcss": "^3.4.1",
    "tailwindcss-animate": "^1.0.7"
  },
  "devDependencies": {
    "prettier": "^3.2.5",
    "prettier-plugin-astro": "^0.13.0",
    "prettier-plugin-tailwindcss": "^0.5.11"
  }
}

================
File: README.md
================
# Astro Starter Kit: Basics

```sh
npm create astro@latest -- --template basics
```

[![Open in StackBlitz](https://developer.stackblitz.com/img/open_in_stackblitz.svg)](https://stackblitz.com/github/withastro/astro/tree/latest/examples/basics)
[![Open with CodeSandbox](https://assets.codesandbox.io/github/button-edit-lime.svg)](https://codesandbox.io/p/sandbox/github/withastro/astro/tree/latest/examples/basics)
[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/withastro/astro?devcontainer_path=.devcontainer/basics/devcontainer.json)

> 🧑‍🚀 **Seasoned astronaut?** Delete this file. Have fun!

![just-the-basics](https://github.com/withastro/astro/assets/2244813/a0a5533c-a856-4198-8470-2d67b1d7c554)

## 🚀 Project Structure

Inside of your Astro project, you'll see the following folders and files:

```text
/
├── public/
│   └── favicon.svg
├── src/
│   ├── components/
│   │   └── Card.astro
│   ├── layouts/
│   │   └── Layout.astro
│   └── pages/
│       └── index.astro
└── package.json
```

Astro looks for `.astro` or `.md` files in the `src/pages/` directory. Each page is exposed as a route based on its file name.

There's nothing special about `src/components/`, but that's where we like to put any Astro/React/Vue/Svelte/Preact components.

Any static assets, like images, can be placed in the `public/` directory.

## 🧞 Commands

All commands are run from the root of the project, from a terminal:

| Command                   | Action                                           |
| :------------------------ | :----------------------------------------------- |
| `npm install`             | Installs dependencies                            |
| `npm run dev`             | Starts local dev server at `localhost:4321`      |
| `npm run build`           | Build your production site to `./dist/`          |
| `npm run preview`         | Preview your build locally, before deploying     |
| `npm run astro ...`       | Run CLI commands like `astro add`, `astro check` |
| `npm run astro -- --help` | Get help using the Astro CLI                     |

## 👀 Want to learn more?

Feel free to check [our documentation](https://docs.astro.build) or jump into our [Discord server](https://astro.build/chat).

================
File: tailwind.config.mjs
================
/** @type {import('tailwindcss').Config} */
module.exports = {
  darkMode: ["class"],
  content: ["./src/**/*.{astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue}"],
  prefix: "",
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    extend: {
      colors: {
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  plugins: [require("tailwindcss-animate"), require("@tailwindcss/typography")],
};

================
File: tsconfig.json
================
{
  "extends": "astro/tsconfigs/base",
  "compilerOptions": {
    "baseUrl": "/Users/andrew/Code/ar-astro/www",
    "paths": {
      "@/*": [
        "./src/*"
      ]
    },
    "jsx": "react-jsx",
    "jsxImportSource": "react"
  }
}
